elasticsearch:
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 7.13.1
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9200
  environment:
    - name: discovery.type
      value: single-node
    - name: xpack.security.enabled
      value: "false" # Disable security for testing
    - name: ES_JAVA_OPTS
      value: "-Xms2g -Xmx2g" # Set heap size to 2GB
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
    interval: 10s
    retries: 5
    timeout: 5s
  lifecycle:
    postStart:
      exec:
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for Elasticsearch to be healthy..." >> /mnt/poststart.log
            until curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green"\|"status":"yellow"'; do
              sleep 2
            done
            echo "Elasticsearch is healthy. Loading index template..." >> /mnt/poststart.log
            curl -X PUT "http://localhost:9200/_index_template/fluentd_template" \
              -H "Content-Type: application/json" \
              -d @/mnt/index_template.json >> /mnt/poststart.log 2>&1
            if [ $? -eq 0 ]; then
              echo "Index template applied successfully." >> /mnt/poststart.log
              curl -X GET "http://localhost:9200/_index_template/fluentd_template?pretty" >> /mnt/poststart.log
            else
              echo "Failed to apply index template." >> /mnt/poststart.log
            fi
  resources:
    requests:
      memory: "4Gi" # Reduce memory request
      cpu: "1" # Reduce CPU request
    limits:
      memory: "4Gi" # Reduce memory limit
      cpu: "2" # Reduce CPU limit
  volumeMounts:
    - name: log-server
      mountPath: /mnt/
  volumes:
    - name: log-server
      persistentVolumeClaim:
        claimName: log-server-pvc
serviceAccount:
  create: true # Ensure a ServiceAccount is created
  name: "" # Leave empty to use the default name generated by the chart
ingress:
  enabled: false # Set to true if you want to enable ingress
  annotations: {} # Add ingress annotations if needed
  hosts:
    - host: "" # Specify the hostname for the ingress (e.g., elasticsearch.local)
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [] # Configure TLS if needed
autoscaling:
  enabled: false # Set to true if you want to enable autoscaling
  minReplicas: 1 # Minimum number of replicas
  maxReplicas: 5 # Maximum number of replicas
  targetCPUUtilizationPercentage: 80 # Target CPU utilization for scaling
  targetMemoryUtilizationPercentage: 80 # Target memory utilization for scaling
